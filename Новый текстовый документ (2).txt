DROP DATABASE IF EXISTS `vk`;
CREATE DATABASE `vk`;
USE `vk`;

DROP TABLE IF EXISTS `product_categories`;
CREATE TABLE `product_categories` (
	`category_id` SERIAL PRIMARY KEY,
	`category_name` VARCHAR(255) UNIQUE,
	`created_at` DATETIME DEFAULT NOW(),
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX category_name_idx(category_name)
    
);

DROP TABLE IF EXISTS `product_description`;
CREATE TABLE `product_description` (
	`product_id` SERIAL PRIMARY KEY,
	`product_name` VARCHAR(255),
	`product_photo` VARCHAR(255) DEFAULT NULL,
	`product_description` TEXT,
	`product_price` DECIMAL(10,2),
	`product_category` BIGINT UNSIGNED NOT NULL,
	`user_posted_id` BIGINT UNSIGNED NOT NULL,
	`created_at` DATETIME DEFAULT NOW(),
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX product_category_idx(product_category),
    INDEX product_updated_at_idx(updated_at),
    
    FOREIGN KEY fk_product_category(product_category) REFERENCES product_categories(category_id),
    FOREIGN KEY (user_posted_id) REFERENCES users(id)
    
);

DROP TABLE IF EXISTS `activity_status`;
CREATE TABLE `activity_status` (
	`active_user_id` SERIAL PRIMARY KEY NOT NULL,
	`activity status` ENUM('Online', 'Offline'),
	`created_at` DATETIME DEFAULT NOW(),
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX active_user_id_idx(active_user_id),
    INDEX updated_at_idx(updated_at),
    
    FOREIGN KEY fk_active_user_id(active_user_id) REFERENCES users(id)
);